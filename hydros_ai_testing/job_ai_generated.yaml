apiVersion: <your-api-version>
kind: WorkloadIdentity
metadata:
  name: trainer-gcp-service-account
  annotations:
    owner.hydros.io/: "{\"hash\":\"f5faf45dba60ad4c4a91f2b3a6e592e59837d858d2f5f5ff7f9bb794290ad47c\",\"prompt\":\"“Attach the GCP service account trainer with GCS and BigQuery edit permissions. Create the service account if it doesn’t exist”\",\"response\":\"{\\\"id\\\":\\\"chatcmpl-7HdFezpyjH7NWp8BKYokRs3AP2ajU\\\",\\\"object\\\":\\\"chat.completion\\\",\\\"created\\\":1684436814,\\\"model\\\":\\\"gpt-3.5-turbo-0301\\\",\\\"choices\\\":[{\\\"index\\\":0,\\\"finish_reason\\\":\\\"stop\\\",\\\"message\\\":{\\\"role\\\":\\\"assistant\\\",\\\"content\\\":\\\"Here's an example YAML definition for the custom resource to accomplish this task:\\\\n\\\\n```\\\\napiVersion: \\\\u003cyour-api-version\\\\u003e\\\\nkind: WorkloadIdentity\\\\nmetadata:\\\\n  name: trainer-gcp-service-account\\\\nspec:\\\\n  gsa:\\\\n    create: true\\\\n    name: trainer-gcp-service-account\\\\n    iamBindings:\\\\n    - roles/storage.objectAdmin\\\\n    - roles/bigquery.dataEditor\\\\n  ksa:\\\\n    create: true\\\\n    name: trainer-ksa\\\\n  requirement: \\\\\\\"Attach the GCP service account trainer with GCS and BigQuery edit permissions. Create the service account if it doesn’t exist\\\\\\\"\\\\n```\\\\n\\\\nReplace `\\\\u003cyour-api-version\\\\u003e` with the appropriate API version for your cluster. Additionally, you'll need to make sure that the necessary roles are properly defined in your cluster's RBAC configuration.\\\"}}],\\\"usage\\\":{\\\"prompt_tokens\\\":465,\\\"completion_tokens\\\":168,\\\"total_tokens\\\":633}}\"}"
spec:
  gsa:
    name: trainer-gcp-service-account
    create: true
    iamBindings:
    - roles/storage.objectAdmin
    - roles/bigquery.dataEditor
  ksa:
    name: trainer-ksa
    create: true
  requirement: "Attach the GCP service account trainer with GCS and BigQuery edit permissions. Create the service account if it doesn’t exist"
